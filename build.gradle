// Global settings
buildscript {
    repositories {
        jcenter()
        maven() {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.9"
        classpath "gradle.plugin.pl.squirrel:classycle-gradle-plugin:1.2"
    }
}

apply plugin: 'java'
apply plugin: "idea"
apply plugin: "net.ltgt.apt"
apply plugin: "pmd"
apply plugin: "findbugs"
apply plugin: "pl.squirrel.classycle"
apply plugin: "checkstyle"
apply plugin: "jacoco"

repositories {
    jcenter()
    maven() {
        url "https://plugins.gradle.org/m2/"
    }
}

allprojects {
    targetCompatibility = 1.7
    sourceCompatibility = 1.7
}

tasks.withType(FindBugs) {
    reports {
        html.enabled = true
        xml.enabled = false
    }
}

// This hack puts testing resource files where we can get to them
task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources/printer"
    into "${buildDir}/classes/test/printer"
}
processTestResources.dependsOn copyTestResources
task cleanTestResources(type: Delete) {
    delete fileTree("${buildDir}/classes/test/printer") {
        include '**/*.bin'
    }
}
test.finalizedBy cleanTestResources
classycleTest.dependsOn cleanTestResources

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

checkstyle {
    toolVersion = '7.6'
    configFile file("${projectDir}/src/test/resources/checkstyle.xml")
    sourceSets -= sourceSets.test
}

javadoc {
    options.links "http://google.github.io/guava/releases/20.0/api/docs"
    options.links "http://docs.oracle.com/javase/7/docs/api/"
}

test.finalizedBy jacocoTestReport

jacocoTestReport {
    reports {
        xml.enabled true // coveralls plugin depends on xml format report
        html.enabled true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/AutoValue_**'])
        })
    }
}


dependencies {
    compileOnly "com.google.auto.value:auto-value:1.2"
    apt "com.google.auto.value:auto-value:1.2"

    // Note: must use 20 because 21 requires JDK 1.8. 22 will support 1.7.
    compile 'com.google.guava:guava:20.0' // Apache 2.0

    testCompile 'junit:junit:4.12'
}
